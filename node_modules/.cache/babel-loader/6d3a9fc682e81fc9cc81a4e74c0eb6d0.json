{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/DCI-Projects/spa-component-usememo-ahmadad62/src/HookFetch.jsx\",\n    _s = $RefreshSig$();\n\nimport { useFetch } from '../src/hooks/useFetch';\nimport BlogList from './BlogList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const {\n    data,\n    isPending,\n    error\n  } = useFetch('https://jsonplaceholder.typicode.com/comments');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }, this), data && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: data,\n      title: \"All data from blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n} // In this example, we import the useFetch hook and call it with the desired URL. We then destructure the returned object to get the data, isPending, and error states and use them to render the appropriate content in the component.\n\n_s(Home, \"aCgKfdtPrqLrDjpZRnAfprQw4fg=\", false, function () {\n  return [useFetch];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useFetch","BlogList","Home","data","isPending","error"],"sources":["/home/user/Documents/DCI-Projects/spa-component-usememo-ahmadad62/src/HookFetch.jsx"],"sourcesContent":["import { useFetch } from '../src/hooks/useFetch';\nimport BlogList from './BlogList';\n\nexport default function Home() {\n  const { data, isPending, error } = useFetch('https://jsonplaceholder.typicode.com/comments');\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      {isPending && <div>Loading ....</div>}\n      {data && <BlogList blogs={data} title=\"All data from blogs\" />}\n    </>\n  );\n}\n\n// In this example, we import the useFetch hook and call it with the desired URL. We then destructure the returned object to get the data, isPending, and error states and use them to render the appropriate content in the component."],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,uBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC7B,MAAM;IAAEC,IAAF;IAAQC,SAAR;IAAmBC;EAAnB,IAA6BL,QAAQ,CAAC,+CAAD,CAA3C;EAEA,oBACE;IAAA,WACGK,KAAK,iBAAI;MAAA,UAAMA;IAAN;MAAA;MAAA;MAAA;IAAA,QADZ,EAEGD,SAAS,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFhB,EAGGD,IAAI,iBAAI,QAAC,QAAD;MAAU,KAAK,EAAEA,IAAjB;MAAuB,KAAK,EAAC;IAA7B;MAAA;MAAA;MAAA;IAAA,QAHX;EAAA,gBADF;AAOD,C,CAED;;GAZwBD,I;UACaF,Q;;;KADbE,I"},"metadata":{},"sourceType":"module"}